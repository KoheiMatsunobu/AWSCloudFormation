AWSTemplateFormatVersion: "2010-09-09"
Description: Sample EC2 Instance
Parameters:
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instance
    Type: "AWS::EC2::KeyPair::KeyName"
  MyIP:
    Description: IP address allowed to access EC2
    Type: String
Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: "vpc-cf"
  IGW:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags: 
        - Key: Name
          Value: "igw-cf"
  # IGWをVPCにアタッチ
  AttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW
  PubSub:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      Tags:
        - Key: Name
          Value: "pub-sub-a-cf"
  PubSubRT:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: "pub-sub-a-rt-cf"
  # PubSub-インターネットゲート間のルーティング
  PubSubToInternet:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref PubSubRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
  # ルートテーブルをサブネットに関連付け
  AssoPubSubRT:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PubSub
      RouteTableId: !Ref PubSubRT
  EC2:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: ami-00d101850e971728d
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      IamInstanceProfile: !Ref BastionIAMInstanceProfile
      NetworkInterfaces:
        - AssociatePublicIpAddress: "false"
          DeviceIndex: "0"
          SubnetId: !Ref PubSub
          GroupSet:
            - !Ref EC2SG
      UserData: !Base64 |
        #!/bin/bash
        sudo yum update
        sudo yum install -y git  
      Tags:
        - Key: Name
          Value: "ec2-a-cf"
  EC2SG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: "ec2-sg-cf"
      GroupDescription: Allow SSH and HTTP access only MyIP
      VpcId: !Ref VPC
      SecurityGroupIngress:
        # HTTP
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref MyIP
        # SSH
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIP
  ElasticIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: "eip-cf"
  IPAssoc:
    Type: "AWS::EC2::EIPAssociation"
    Properties:
      InstanceId: !Ref EC2
      EIP: !Ref ElasticIP
  # IAMロールの作成
  BastionIAMRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
##        Path: "/"
  # IAMポリシーの作成
  BastionIAMPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "cfn-ec2-policy"
      Roles:
        - !Ref BastionIAMRole
      PolicyDocument:
        Statement:
          -
            Effect: "Allow"
            Resource: ""
            Action:
              - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
              - "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"
  # インスタンスプロファイルを作成してIAMロールと紐付ける
  BastionIAMInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - !Ref BastionIAMRole
Outputs:
  EC2PublicIP:
    Value: !GetAtt EC2.PublicIp
    Description: Public IP of EC2 instance
